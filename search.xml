<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hello World</title>
      <link href="2021/01/23/hello-world/"/>
      <url>2021/01/23/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>第1周 计算</title>
      <link href="2020/04/12/week-1/"/>
      <url>2020/04/12/week-1/</url>
      
        <content type="html"><![CDATA[<p>:::note info<br>以下为个人学习笔记和习题整理<br>课程：零基础学Java语言-浙江大学-翁恺 @ 中国大学MOOC<br><a href="https://www.icourse163.org/course/ZJU-1001541001">https://www.icourse163.org/course/ZJU-1001541001</a><br>:::</p><h1 id="课堂笔记"><a href="#课堂笔记" class="headerlink" title="课堂笔记"></a>课堂笔记</h1><h2 id="读输入、字符串输出"><a href="#读输入、字符串输出" class="headerlink" title="读输入、字符串输出"></a>读输入、字符串输出</h2><pre class="line-numbers language-java" data-language="java"><div class="caption"><span>scanner</span></div><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span><span class="token punctuation">;</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token class-name">Scanner</span> in <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 输入Scan之后，按下键盘 Alt + “/” 键，Eclipse下自动补全。</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span><span class="token function">nextLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 让in这个对象做读入下一行的动作，结果交给System.out这个对象去打印一行。</span><span class="token comment">// 字符串的 + 用来连接两个字符串形成更长的字符串。</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Hello"</span> <span class="token operator">+</span> <span class="token string">" world."</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Hello"</span> <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Hello"</span> <span class="token operator">+</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">+</span> <span class="token number">3</span> <span class="token operator">+</span> <span class="token string">"Hello"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>tips：</p><ul><li><p><code>System.out.println</code> 会换行，<code>System.out.print</code> 则不会换行</p></li><li><p>出现警告：<code>Resource leak: &#39;in&#39; is never closed</code>，可以在函数的最后加入</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">in<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//释放</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2></li><li><p><strong>形式</strong>：&lt;类型名称&gt; &lt;变量名称&gt; = &lt;初始值&gt;<br><code>int price, amount; // 同时定义两个变量</code><br><code>int price = 0; // 定义变量并赋值</code><br><code>int price, amount = 100, age;</code></p></li><li><p><strong>类型名称</strong>：Java是一种<strong>强类型语言</strong>，所有变量在使用前必须定义或声明，所有变量必须具有确定的数据类型。数据类型表示在变量中可以存放什么样的数据，程序运行过程中也不能改变变量的类型。</p></li><li><p><strong>变量名称</strong>：又称标识符，只能由字母、数字、下划线构成，数字不能出现在第一个位置。此外，Java的保留字也不能用作标识符。</p></li><li><p>Java的保留字列表</p></li></ul><table><thead><tr><th>abstract</th><th>do</th><th>implements</th><th>protected</th><th>throws</th></tr></thead><tbody><tr><td>boolean</td><td>double</td><td>import</td><td>public</td><td>transient</td></tr><tr><td>break</td><td>else</td><td>instanceof</td><td>return</td><td>true</td></tr><tr><td>byte</td><td>extends</td><td>int</td><td>short</td><td>try</td></tr><tr><td>case</td><td>false</td><td>interface</td><td>static</td><td>while</td></tr><tr><td>catch</td><td>final</td><td>long</td><td>strictfp</td><td>void</td></tr><tr><td>char</td><td>finally</td><td>native</td><td>super</td><td>volatile</td></tr><tr><td>class</td><td>float</td><td>new</td><td>switch</td><td></td></tr><tr><td>const*</td><td>for</td><td>null</td><td>synchronized</td><td></td></tr><tr><td>continue</td><td>goto*</td><td>package</td><td>this</td><td></td></tr><tr><td>default</td><td>if</td><td>private</td><td>throw</td><td></td></tr></tbody></table><ul><li>以下哪些标识符是符合规则的？</li><li><input checked="" disabled="" type="checkbox"> currency</li><li><input checked="" disabled="" type="checkbox"> lastName</li><li><input checked="" disabled="" type="checkbox"> fireplace</li><li><input disabled="" type="checkbox"> _last_name</li><li><input checked="" disabled="" type="checkbox"> xingmin</li><li><input disabled="" type="checkbox"> class</li><li><input disabled="" type="checkbox"> goto</li><li><input disabled="" type="checkbox"> 4ever</li><li><input disabled="" type="checkbox"> time-machine</li><li><input disabled="" type="checkbox"> Int </li><li><input disabled="" type="checkbox"> $12 </li><li><input disabled="" type="checkbox"> 我是变量</li></ul><h2 id="常量-final"><a href="#常量-final" class="headerlink" title="常量 final"></a>常量 final</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">final</span> <span class="token keyword">int</span> AMOUNT <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span><span class="token comment">// final是一个修饰符，表示这个变量的值一旦初始化，就不能再修改了。</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="变量类型"><a href="#变量类型" class="headerlink" title="变量类型"></a>变量类型</h2><h3 id="整数-int"><a href="#整数-int" class="headerlink" title="整数 int"></a>整数 int</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">int</span> price <span class="token operator">=</span> in<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>如果用户输入的不是整数，则会报错 <code>java.util.InputMismatchException</code>。</li><li>   程序要求读入多个数字时，可以在一行输入，中间用空格分开，也可以多行输入。</li><li>每次召唤<code>in.nextInt()</code>，它就等待用户输入一个整数。</li><li>两个整数的运算结果只能是整数。</li><li>在Java中，<code>10</code>和<code>10.0</code>是完全不同的数。</li></ul><h3 id="浮点数-double"><a href="#浮点数-double" class="headerlink" title="浮点数 double"></a>浮点数 double</h3><ul><li><strong>浮点数运算有误差</strong>：由于二进制的自身限制，浮点计算需要将十进制先转换为二进制，然后对二进制数进行计算，因此导致误差。</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">1.2</span><span class="token operator">-</span><span class="token number">1.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 结果为 0.09999999999999987</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>整数类型不能表达有小数部分的数；整数运算速度快，占内存小；日常中整数运算多。</li></ul><h2 id="赋值运算"><a href="#赋值运算" class="headerlink" title="赋值运算"></a>赋值运算</h2><h3 id="强制类型转换"><a href="#强制类型转换" class="headerlink" title="强制类型转换"></a>强制类型转换</h3><ul><li>浮点数和整数放在一起运算时，Java会将整数转换成浮点数，然后进行浮点数运算。</li><li>强制性转换的优先级高于四则运算。<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">double</span> a <span class="token operator">=</span> <span class="token number">1.0</span><span class="token punctuation">;</span><span class="token keyword">double</span> b <span class="token operator">=</span> <span class="token number">2.0</span><span class="token punctuation">;</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>a<span class="token operator">/</span>b<span class="token punctuation">;</span> <span class="token comment">//会报错</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>a<span class="token operator">/</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//不会报错</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="运算符优先级"><a href="#运算符优先级" class="headerlink" title="运算符优先级"></a>运算符优先级</h3></li><li>单目运算符<code>+</code> <code>-</code> 优先级最高</li><li>结合关系一般自左向右，单目<code>+</code> <code>-</code>和赋值<code>=</code>自右向左。<pre class="line-numbers language-java" data-language="java"><code class="language-java">result <span class="token operator">=</span> a <span class="token operator">=</span> b <span class="token operator">=</span> <span class="token number">3</span> <span class="token operator">+</span> c<span class="token punctuation">;</span>result <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>result <span class="token operator">=</span> <span class="token punctuation">(</span>result <span class="token operator">=</span> result <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">6</span> <span class="token operator">*</span> <span class="token punctuation">(</span>result <span class="token operator">=</span> <span class="token number">3</span> <span class="token operator">+</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="复合赋值"><a href="#复合赋值" class="headerlink" title="复合赋值"></a>复合赋值</h3></li><li>5个算术运算符，<code>+ - * / %</code>，可以和赋值运算符 <code>=</code> 结合起来，形成复合赋值运算。注意，两个运算符中间不要有空格。<pre class="line-numbers language-java" data-language="java"><code class="language-java">total <span class="token operator">+=</span> <span class="token punctuation">(</span>sum<span class="token operator">+</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span>total <span class="token operator">=</span> total <span class="token operator">+</span> <span class="token punctuation">(</span>sum<span class="token operator">+</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span>total <span class="token operator">*</span> <span class="token operator">=</span> sum<span class="token operator">+</span><span class="token number">12</span><span class="token punctuation">;</span>total <span class="token operator">=</span> total<span class="token operator">*</span><span class="token punctuation">(</span>sum<span class="token operator">+</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">;</span>total <span class="token operator">/=</span> <span class="token number">12</span><span class="token operator">+</span><span class="token number">6</span><span class="token punctuation">;</span>total <span class="token operator">=</span> total <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">12</span><span class="token operator">+</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>递增递减运算符 <code>++</code> <code>--</code>，给变量+1或-1</li><li>前缀后缀：<pre class="line-numbers language-java" data-language="java"><code class="language-java">a <span class="token operator">=</span> <span class="token number">14</span><span class="token punctuation">;</span>t1 <span class="token operator">=</span> a<span class="token operator">++</span><span class="token punctuation">;</span> <span class="token comment">// t1先被赋值为 a 即14， a自加到 15</span>t2 <span class="token operator">=</span> <span class="token operator">++</span>a<span class="token punctuation">;</span> <span class="token comment">// a先自加到 15，t2被赋值为 a 即 15</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul><h1 id="编程题"><a href="#编程题" class="headerlink" title="编程题"></a>编程题</h1><h2 id="题目1-温度转换（5分）"><a href="#题目1-温度转换（5分）" class="headerlink" title="题目1. 温度转换（5分）"></a>题目1. 温度转换（5分）</h2><ul><li><p><strong>题目内容</strong><br>  写一个将华氏温度转换成摄氏温度的程序，转换的公式是：</p><p>  <code>°F = (9/5)*°C + 32</code></p><p>  其中C表示摄氏温度，F表示华氏温度。</p><p>  程序的输入是一个整数，表示华氏温度。输出对应的摄氏温度，也是一个整数。</p><p>  提示，为了把计算结果的浮点数转换成整数，需要使用下面的表达式：</p><p>  <code>(int)x;</code></p><p>  其中x是要转换的那个浮点数。</p><p>  <em>注意：除了题目要求的输出，不能输出任何其他内容，比如输入时的提示，输出时的说明等等都不能。这道题目要求转换后的数字，程序就只能输出这个数字，除此之外任何内容都不能输出。</em></p></li><li><p><strong>输入格式</strong><br>一个整数。</p></li><li><p><strong>输出格式</strong><br>一个整数。</p></li><li><p><strong>输入样例</strong><br>100</p></li><li><p><strong>输出样例</strong><br>37</p></li></ul><h3 id="解题代码"><a href="#解题代码" class="headerlink" title="解题代码"></a>解题代码</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">&#123;</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token class-name">Scanner</span> in <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 获得输入的整数</span><span class="token keyword">int</span> fahrenheit <span class="token operator">=</span> in<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 计算摄氏度</span><span class="token keyword">double</span> centigrade <span class="token operator">=</span> <span class="token punctuation">(</span>fahrenheit <span class="token operator">-</span> <span class="token number">32</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">9</span> <span class="token operator">/</span> <span class="token number">5.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 将浮点数转换为整数输出</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>centigrade<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 计算机科学 </category>
          
          <category> Java </category>
          
          <category> 零基础学Java语言-浙江大学-翁恺 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
